" ################################################################
" Simple Native Modifications
" ################################################################

syntax on
set number
set noswapfile
set hlsearch
set ignorecase
set incsearch
set backspace=indent,eol,start
set expandtab ts=4 sw=4 ai

" ################################################################
" Plugin Selection
" ################################################################
"

" Code additions to use vim-plug
call plug#begin('~/.vim/plugged')

" Install NERDTree
Plug 'preservim/NERDTree'

" Install NERDTree Additions
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'scrooloose/nerdtree-project-plugin'
Plug 'PhilRunninger/nerdtree-buffer-ops'

" Install PlantUML and its dependencies
Plug 'tyru/open-browser.vim'
Plug 'aklt/plantuml-syntax'
Plug 'weirongxu/plantuml-previewer.vim'

" Installing Grammer tools
Plug 'rhysd/vim-grammarous'

" Installing Markdown Previewer
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}

" Installing Unittesting Tools
Plug 'vim-test/vim-test'

" Installing Conda management tools
Plug 'cjrh/vim-conda'

" Installing JSON editor tools
Plug 'elzr/vim-json'

" Installing debugger tools
Plug 'puremourning/vimspector'

" Initialize plugin system
call plug#end()

" To install new plugs, one must run the following commands within vim.
" :PlugInstall
"

" ################################################################
" Keymappings
" ################################################################

" e keymap for environment
map <silent> <F4> :CondaChangeEnv<CR>

" n keymap for navigation
nmap <silent> n<C-o> :NERDTree<CR>
nmap <silent> n<C-t> :NERDTreeToggle<CR>
nmap <silent> n<C-f> :NERDTreeFind<CR>
nmap <silent> n<C-s> :NERDTreeFocus<CR>

" t keymap for testing 
nmap <silent> t<C-n> :TestNearest<CR>
nmap <silent> t<C-f> :TestFile<CR>
nmap <silent> t<C-s> :TestSuite<CR>
nmap <silent> t<C-l> :TestLast<CR>
nmap <silent> t<C-g> :TestVisit<CR>

" ################################################################
" Debugger Configuration
" ################################################################

" packadd! vimspector
"let g:vimspector_enable_mappings = 'HUMAN'
nmap <Leader>c <Plug>VimspectorContinue
nmap <Leader>t <Plug>VimspectorStop
nmap <Leader>r <Plug>VimspectorRestart
nmap <Leader>p <Plug>VimspectorPause
nmap <Leader>b <Plug>VimspectorToggleBreakpoint
nmap <Leader>s <Plug>VimspectorStepOver
nmap <Leader>i <Plug>VimspectorStepInto
nmap <Leader>o <Plug>VimspectorStepOut
nmap <Leader><C-b> <Plug>VimspectorToggleConditionalBreakpoint
nmap <Leader><A-b> <Plug>VimspectorAddFunctionBreakpoint
